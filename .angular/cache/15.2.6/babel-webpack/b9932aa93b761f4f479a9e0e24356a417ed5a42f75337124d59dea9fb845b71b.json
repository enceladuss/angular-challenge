{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let DebounceClickDirective = /*#__PURE__*/(() => {\n  class DebounceClickDirective {\n    constructor() {\n      this.debounceClick = new EventEmitter();\n      this.clicks = new Subject();\n    }\n    ngOnInit() {\n      const debounceTimeMs = 500;\n      this.subscription = this.clicks.pipe(debounceTime(debounceTimeMs)).subscribe(value => this.debounceClick.emit(value));\n    }\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n    clickEvent(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.clicks.next();\n    }\n  }\n  DebounceClickDirective.ɵfac = function DebounceClickDirective_Factory(t) {\n    return new (t || DebounceClickDirective)();\n  };\n  DebounceClickDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: DebounceClickDirective,\n    selectors: [[\"\", \"appDebounceClick\", \"\"]],\n    hostBindings: function DebounceClickDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function DebounceClickDirective_click_HostBindingHandler($event) {\n          return ctx.clickEvent($event);\n        });\n      }\n    },\n    outputs: {\n      debounceClick: \"debounceClick\"\n    }\n  });\n  return DebounceClickDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}